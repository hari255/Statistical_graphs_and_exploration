x = ~lag(Infected), y = ~Infected, type = 'scatter', mode = 'lines+markers',
showlegend = TRUE, name = 'mode:lines+markers',
text = 'Infected')
# Time series for Cook, IL
plot_ly() %>%
# add Cook county
’s time series using mode: lines+markers
add_trace(data = filtered_data %>%
filter(DATE == 2020-12-31),
x = ~lag(Infected), y = ~Infected, type = 'Line', mode = 'lines+markers',
showlegend = TRUE, name = 'mode:lines+markers',
text = 'Infected')
# Time series for Cook, IL
plot_ly() %>%
# add Cook county
’s time series using mode: lines+markers
add_trace(data = filtered_data %>%
filter(DATE == 2020-12-31),
x = ~lag(Infected), y = ~Infected, type = 'scatter', mode = 'lines+markers',
showlegend = TRUE, name = 'mode:lines+markers',
text = 'Infected')
plot_ly() %>%
# add Cook county
’s time series using mode: lines+markers
add_trace(data = county.top10.long %>%
filter(wday(Date) == 1 & type == 'Observed' & County == 'Cook'),
x = ~Date, y = ~Count, type = 'scatter', mode = 'lines+markers',
showlegend = TRUE, name = 'mode:lines+markers',
text = 'Cook, Illinois')
# Time series for Cook, IL
plot_ly() %>%
# add Cook county
’s time series using mode: lines+markers
add_trace(data = filtered_data %>%
filter(DATE == 2020-12-31),
x = ~Date, y = ~Infected, type = 'scatter', mode = 'lines+markers',
showlegend = TRUE, name = 'mode:lines+markers',
text = 'Infected')
# Time series for Cook, IL
plot_ly() %>%
# add Cook county
’s time series using mode: lines+markers
add_trace(data = filtered_data %>%
filter(DATE == 2020-12-31),
x = ~Date, y = ~lag(Infected), type = 'scatter', mode = 'lines+markers',
showlegend = TRUE, name = 'mode:lines+markers',
text = 'Infected')
plot_ly() %>%
add_trace(data = top_10_states %>%
filter(DATE == 2020-12-31),
x = ~Date, y = ~lag(Infected), type = 'scatter', mode = 'lines+markers',
showlegend = TRUE, name = 'mode:lines+markers',
text = 'Infected')
library(IDDA)
library(dplyr)
library(tidyr)
library(plotly)
library(htmlwidgets)
library(IDDA)
data("state.long")
state.long
library(IDDA)
data(Test.state)
data(PosTest.state)
View(Test.state)
View(PosTest.state)
View(Test.state)
install.packages("reshape2")
library(reshape2)
View(I.state)
Test.long <- Test.state %>%
pivot_longer (X2020.12.31: X2020.11.13, names_to = "DATE",
values_to = "Infected")
View(Test.long)
dim(Test.long)
dim(Test.state)
Test.long <- Test.state %>%
pivot_longer (X2020.12.31: X2020.01.22, names_to = "DATE",
values_to = "Infected")
View(Test.long)
Test.long <- Test.state %>%
pivot_longer (X2020.12.31: X2020.11.13, names_to = "DATE",
values_to = "Infected")
View(Test.long)
View(PosTest.state)
postTest.long <- PostTest.state %>%
pivot_longer (X2020.12.31: X2020.11.13, names_to = "DATE",
values_to = "Infected")
postTest.long <- PosTest.state %>%
pivot_longer (X2020.12.31: X2020.11.13, names_to = "DATE",
values_to = "Infected")
postTest.long
View(postTest.long)
View(I.county)
View(pop.county)
full_join(anti_join(postTest.long, Test.long, by = "State"),anti_join(Test.long,postTest.long, by = "State"), by = "State")
combined_data<- full_join(postTest.long, Test.long, by = "State")
combined_data
dim(combined_data)
View(combined_data)
data(Test.state.rda)
library(IDDA)
data(Test.state.rda)
rda
mutate(combined_data,weeklyposrate = X2020.11.12.x/X2020.11.12y )
mutate(combined_data,weeklyposrate = X2020.11.12.x/X2020.11.12.y )
mutate(combined_data,weeklyposrate = X2020.11.12.x:X2020.11.05.x/X2020.11.05.y:X2020.11.05.y )
mutate(combined_data,weeklyposrate= (X2020.11.12.x:X2020.11.05.x)/(X2020.11.05.y:X2020.11.05.y ))
library(IDDA)
data(Test.state)
data(PosTest.state)
mutate(combined_data,weeklyposrate= (X2020.11.12.x:X2020.11.05.x)/(X2020.11.05.y:X2020.11.05.y ))
weeklyposrate <- mutate(combined_data,weeklyposrate= (X2020.11.12.x/X2020.11.05.y )
combined_data<- full_join(postTest.long, Test.long, by = "State")
weeklyposrate <- mutate(combined_data,weeklyposrate= X2020.11.12.x/X2020.11.05.y )
weeklyposrate
View(weeklyposrate)
weeklyposrate <- mutate(combined_data,weeklyposrate= X2020.11.12.x:X2020.01.15.x)
weeklyposrate <- mutate(combined_data,weeklyposrate= X2020.11.12.x:X2020.01.15.x/X2020.11.12.y:X2020.01.15.y)
urlRemote  <- "https://raw.githubusercontent.com/"
pathGithub <- "PublicaMundi/MappingAPI/master/data/geojson/"
fileName   <- "us-states.json"
# geojson_read(x = paste0(urlRemote, pathGithub, fileName),
# what = "sp")
library(tidyverse)
library(geojsonio)
library(leaflet)
library(dplyr)
library(slid)
library(tidyverse)
library(geojsonio)
library(leaflet)
library(dplyr)
library(maps)
library(sp)
library(rgeos)
library(htmlwidgets)
library(lubridate)
library(IDDA)
data("I.state")
data("pop.state")
View(I.state)
View(pop.state)
data("I.state")
data("pop.state")
I.pop.state <- left_join(I.state, pop.state, by="State")
I.pop.state <- left_join(I.state, pop.state, by="State")
I.pop.state <- left_join(I.state, pop.state, by="State")
I.pop.state
View(I.pop.state)
I.pop.state <- left_join(I.state, pop.state, by="State") %>%
group_by(State)
I.pop.state
a.pop.data<- I.pop.state %>%
mutate(weekly_risk = (X2020.12.05:X2020.12.11)/population )
a.pop.data<- I.pop.state %>%
mutate(weekly_risk = (X2020.12.11 - X2020.12.05)/population )
a.pop.data
View(a.pop.data)
data("I.state")
data("pop.state")
I.pop.state <- left_join(I.state, pop.state, by="State") %>%
group_by(State)
I.pop.state
View(I.pop.state)
weekly_data <- I.state%>%
group_by(State)%>%
mutate(by_weak = X2020.12.11 - X2020.12.05)
View(weekly_data)
weekly_data <- I.state%>%
group_by(State)%>%
mutate(by_week = X2020.12.11 - X2020.12.05)
dplyr::select(State, by_week)
weekly_data <- I.state%>%
group_by(State)%>%
mutate(by_week = X2020.12.11 - X2020.12.05)%>%
dplyr::select(State, by_week)
weekly_data
View(weekly_data)
data_with_weekly_risk <- inner_join(weekly_data, pop.state, by="State")%>%
mutate(weekly_risk = by_week/population)%>%
head(data_with_weekly_risk)
data_with_weekly_risk <- inner_join(weekly_data, pop.state, by="State")%>%
mutate(weekly_risk = by_week/population)
head(data_with_weekly_risk)
install.packages("leaflit")
install.packages("leaflet")
devtools::install_github("rstudio/leaflet")
install.packages("leaflet")
devtools::install_github("rstudio/leaflet")
library(geojsonio)
library(geojsonio)
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4) %>%
addTiles()
library(geojsonio)
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)
library(geojsonio)
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)
library(geojsonio)
urlRemote  <- "https://raw.githubusercontent.com/"
pathGithub <- "PublicaMundi/MappingAPI/master/data/geojson/"
fileName   <- "us-states.json"
states0 <- geojson_read(x = paste0(urlRemote, pathGithub, fileName),
# what = "sp")
library(geojsonio)
urlRemote  <- "https://raw.githubusercontent.com/"
pathGithub <- "PublicaMundi/MappingAPI/master/data/geojson/"
fileName   <- "us-states.json"
states0 <- geojson_read(x = paste0(urlRemote, pathGithub, fileName),
# what = "sp")
class(states0)
library(geojsonio)
urlRemote  <- "https://raw.githubusercontent.com/"
pathGithub <- "PublicaMundi/MappingAPI/master/data/geojson/"
fileName   <- "us-states.json"
states0 <- geojson_read(x = paste0(urlRemote, pathGithub, fileName),
what = "sp")
class(states0)
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addTiles()
library(geojsonio)
urlRemote  <- "https://raw.githubusercontent.com/"
pathGithub <- "PublicaMundi/MappingAPI/master/data/geojson/"
fileName   <- "us-states.json"
states0 <- geojson_read(x = paste0(urlRemote, pathGithub, fileName),
what = "sp")
class(states0)
library(geojsonio); library(leaflet); library(dplyr)
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addTiles()
dmap
help("setView")
help(colorbin)
??colorBin
help("addTiles")
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addTiles()
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addTiles()
dmap
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addTiles()
colorBin(bind=states )
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addTiles()
colorBin(bins = states )
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addTiles()
addPolygons()
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addPolygons()
library(geojsonio)
urlRemote  <- "https://raw.githubusercontent.com/"
pathGithub <- "PublicaMundi/MappingAPI/master/data/geojson/"
fileName   <- "us-states.json"
states0 <- geojson_read(x = paste0(urlRemote, pathGithub, fileName),
what = "sp")
class(states0)
library(geojsonio); library(leaflet); library(dplyr)
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addPolygons()
dmap <- leaflet(data_with_weekly_risk) %>%
setView(-96, 37.8, 4, zoom = 4)%>%
addTiles()
dmap
View(data_with_weekly_risk)
library(tidyverse)
install.packages("rlang")
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
library(tidyverse)
detach("package:base", unload = TRUE)
library(rlang)
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
uninstall.packages("rlang")
install.packages("tidyverse")
library(dplyr)
install.packages("dplyr")
install.packages("geojsonio")
library(tidyverse)
library(tidyverse)
devtools::install_github("tidyverse/tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages(rlang)
install.packages(c("brew", "classInt", "cli", "commonmark", "cpp11", "crayon", "crul", "curl", "data.table", "desc", "devtools", "digest", "evaluate", "gargle", "gert", "gh", "gitcreds", "httpuv", "jsonlite", "maptools", "markdown", "nlme", "openssl", "protolite", "purrr", "ragg", "readr", "rlang", "rmarkdown", "sys", "testthat", "tidyr", "tidyselect", "tinytex", "vctrs", "vroom", "wk", "xfun", "yaml", "zip"))
install.packages(c("brew", "classInt", "cli", "commonmark", "cpp11", "crayon", "crul", "curl", "data.table", "desc", "devtools", "digest", "evaluate", "gargle", "gert", "gh", "gitcreds", "httpuv", "jsonlite", "maptools", "markdown", "nlme", "openssl", "protolite", "purrr", "ragg", "readr", "rlang", "rmarkdown", "sys", "testthat", "tidyr", "tidyselect", "tinytex", "vctrs", "vroom", "wk", "xfun", "yaml", "zip"))
install.packages("dplyr")
library(tidyverse)
install.packages("devtools")
install.packages("devtools")
library(tidyverse)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(tidyverse)
install.packages(c("brew", "classInt", "cli", "commonmark", "cpp11", "crayon", "crul", "curl", "data.table", "desc", "devtools", "digest", "evaluate", "gargle", "gert", "gh", "gitcreds", "httpuv", "jsonlite", "maptools", "markdown", "nlme", "openssl", "protolite", "purrr", "ragg", "readr", "rlang", "rmarkdown", "sys", "testthat", "tidyr", "tidyselect", "tinytex", "vctrs", "vroom", "wk", "xfun", "yaml", "zip"))
install.packages(c("brew", "classInt", "cli", "commonmark", "cpp11", "crayon", "crul", "curl", "data.table", "desc", "devtools", "digest", "evaluate", "gargle", "gert", "gh", "gitcreds", "httpuv", "jsonlite", "maptools", "markdown", "nlme", "openssl", "protolite", "purrr", "ragg", "readr", "rlang", "rmarkdown", "sys", "testthat", "tidyr", "tidyselect", "tinytex", "vctrs", "vroom", "wk", "xfun", "yaml", "zip"))
install.packages(c("brew", "classInt", "cli", "commonmark", "cpp11", "crayon", "crul", "curl", "data.table", "desc", "devtools", "digest", "evaluate", "gargle", "gert", "gh", "gitcreds", "httpuv", "jsonlite", "maptools", "markdown", "nlme", "openssl", "protolite", "purrr", "ragg", "readr", "rlang", "rmarkdown", "sys", "testthat", "tidyr", "tidyselect", "tinytex", "vctrs", "vroom", "wk", "xfun", "yaml", "zip"))
library(tidyverse)
library(geojsonio)
library(leaflet)
library(dplyr)
library(maps)
library(rgeos)
library(htmlwidgets)
library(lubridate)
library(IDDA)
library(tidyverse)
library(geojsonio)
library(leaflet)
library(dplyr)
library(maps)
library(rgeos)
library(htmlwidgets)
library(lubridate)
library(IDDA)
q()
install.packages("leaflet")
install.packages("geojsonio")
library(geojsonio)
urlRemote <- "https://raw.githubusercontent.com/"
pathGithub <- "PublicaMundi/MappingAPI/master/data/geojson/"
fileName <- "us-states.json"
states0 <- geojson_read(x = paste0(urlRemote, pathGithub, fileName),
what = "sp")
class(states0)
library(geojsonio); library(leaflet); library(dplyr)
library(IDDA); data(state.long); data(states1)
library(sp)
library(rgeos)
library(geojsonio); library(leaflet); library(dplyr)
library(IDDA); data(state.long); data(states1)
dmap <- leaflet(week.allo.state) %>%
setView(-96, 37.8, 4, zoom = 4) %>%
addPolygons()
week.allo.state <- df[!(df$State=="American Samoa" | df$State=="Palau" | df$State == "Guam" | df$State == "Mariana Islands" | df$State == "Marshall Islands" | df$State == "NewYorkCity" | df$State == "PuertoRico" |  df$State == "U.S.VirginIslands" | df$State == "Philadelphia"),]
State <- pfizer$Jurisdiction
State <- pfizer$Jurisdiction
library(tidyverse)
library(dplyr)
State <- pfizer$Jurisdiction
library(readxl)
pfizer <- read_excel("csv's/pfizer.xlsx",
col_types = c("text", "date", "numeric",
"numeric"))
View(pfizer)
library(readxl)
moderna <- read_excel("Statistical_graphs_and_exploration/moderna.xlsx",
col_types = c("text", "date", "numeric",
"numeric"))
View(moderna)
library(readxl)
janssen <- read_excel("Statistical_graphs_and_exploration/janssen.xlsx",
col_types = c("text", "date", "numeric"))
View(janssen)
State <- pfizer$Jurisdiction
Date <- pfizer$Week.of.Allocations
Pfizer.1st.Dose.Allocations <- pfizer$X1st.Dose.Allocations
Pfizer.2nd.Dose.Allocations <- pfizer$X2nd.Dose.Allocations
Moderna.1st.Dose.Allocations <- moderna$X1st.Dose.Allocations
Moderna.2nd.Dose.Allocations <- moderna$X2nd.Dose.Allocations
Janssen.1st.Dose.Allocations <- janssen$X1st.Dose.Allocations
All.Dose.Allocations <- 0.5 *(Pfizer.2nd.Dose.Allocations+Pfizer.1st.Dose.Allocations+Moderna.1st.Dose.Allocations + Moderna.2nd.Dose.Allocations)+Janssen.1st.Dose.Allocations
Cum.Allocation <-cumsum(All.Dose.Allocations)
length(State) <-length(pfizer$Jurisdiction)
length(Date) <- length(pfizer$Jurisdiction)
length(Pfizer.1st.Dose.Allocations) <- length(pfizer$Jurisdiction)
length(Pfizer.2nd.Dose.Allocations) <- length(pfizer$Jurisdiction)
length(Moderna.1st.Dose.Allocations) <- length(pfizer$Jurisdiction)
length(Moderna.2nd.Dose.Allocations) <- length(pfizer$Jurisdiction)
length(Janssen.1st.Dose.Allocations) <- length(pfizer$Jurisdiction)
length(All.Dose.Allocations) <- length(pfizer$Jurisdiction)
df <- data.frame(State, Date, Pfizer.1st.Dose.Allocations, Pfizer.2nd.Dose.Allocations, Moderna.1st.Dose.Allocations, Moderna.2nd.Dose.Allocations , Janssen.1st.Dose.Allocations, All.Dose.Allocations, Cum.Allocation)
population_data <- IDDA::pop.state
population_data
population_data <- IDDA::pop.state
df<- left_join(df,population_data, by="State")
library(dplyr)
df <- mutate(df, Doseperpop=Cum.Allocation/df$population)
#library(tidyr)
#week.allo.state <- df%>%drop_na(State, Date, Pfizer.1st.Dose.Allocations, Pfizer.2nd.Dose.Allocations, Moderna.1st.Dose.Allocations, Moderna.2nd.Dose.Allocations , Janssen.1st.Dose.Allocations, All.Dose.Allocations, population, Cum.Allocation, Doseperpop)
week.allo.state <- df[!(df$State=="American Samoa" | df$State=="Palau" | df$State == "Guam" | df$State == "Mariana Islands" | df$State == "Marshall Islands" | df$State == "NewYorkCity" | df$State == "PuertoRico" |  df$State == "U.S.VirginIslands" | df$State == "Philadelphia"),]
library(plotly)
plot_ly() %>%
# Add Cook County’s time series using mode: lines+markers
add_trace(data = week.allo.state %>%
filter(State == 'Virginia'),x = ~Date , y = ~Janssen.1st.Dose.Allocations, type = 'scatter', mode = 'lines+markers',showlegend = TRUE, name = 'Janssen Dose') %>%
add_trace(data = week.allo.state %>%
filter(State == 'Virginia'),x = ~Date , y = ~Pfizer.2nd.Dose.Allocations, type = 'scatter', mode = 'lines+markers',showlegend = TRUE, name = 'Pfizer 2nd dose')%>%
add_trace(data = week.allo.state %>%
filter(State == 'Virginia'),x = ~Date , y = ~Pfizer.1st.Dose.Allocations, type = 'scatter', mode = 'lines+markers',showlegend = TRUE, name = 'Pfizer 1st dose')%>%
add_trace(data = week.allo.state %>%
filter(State == 'Virginia'),x = ~Date , y = ~Moderna.2nd.Dose.Allocations, type = 'scatter', mode ='lines+markers',showlegend = TRUE, name = 'Moderna 2nd dose')%>%
add_trace(data = week.allo.state %>%
filter(State == 'Virginia'),x = ~Date , y = ~Moderna.1st.Dose.Allocations, type = 'scatter', mode ='lines+markers',showlegend = TRUE, name = 'Moderna 1st dose')
plot_ly() %>%
add_trace(data = week.allo.state %>%
filter(State == "Virginia"),
x = ~Date, y = ~Doseperpop, type = 'scatter', mode = 'lines+markers',
showlegend = TRUE, name = 'doseperpopulation')
install.packages("leaflet")
install.packages("geojsonio")
install.packages("leaflet")
install.packages("geojsonio")
library(leaflet)
library(geojsonio)
urlRemote <- "https://raw.githubusercontent.com/"
pathGithub <- "PublicaMundi/MappingAPI/master/data/geojson/"
fileName <- "us-states.json"
states0 <- geojson_read(x = paste0(urlRemote, pathGithub, fileName),
what = "sp")
class(states0)
library(geojsonio); library(leaflet); library(dplyr)
library(IDDA); data(state.long); data(states1)
library(sp)
library(rgeos)
library(geojsonio); library(leaflet); library(dplyr)
library(IDDA); data(state.long); data(states1)
dmap <- leaflet(week.allo.state) %>%
setView(-96, 37.8, 4, zoom = 4) %>%
addPolygons()
data(week.allo.state)
library(sp)
library(rgeos)
library(geojsonio); library(leaflet); library(dplyr)
dmap <- leaflet(week.allo.state) %>%
setView(-96, 37.8, 4, zoom = 4) %>%
addPolygons()
library(sp)
library(sf)
library(rgeos)
library(geojsonio); library(leaflet); library(dplyr)
dmap <- leaflet(week.allo.state) %>%
setView(-96, 37.8, 4, zoom = 4) %>%
addPolygons()
library(sp)
library(sf)
library(rgeos)
library(geojsonio); library(leaflet); library(dplyr)
dmap <- leaflet() %>%
setView(-96, 37.8, 4, zoom = 4) %>%
addPolygons()
library(sp)
library(sf)
library(rgeos)
library(geojsonio); library(leaflet); library(dplyr)
dmap <- leaflet(week.allo.state) %>%
setView(-96, 37.8, 4, zoom = 4) %>%
addTiles()
dmap
addPolygons()
dmap%>%addPolygons()
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
dmap <- leaflet(week.allo.state) %>%
setView(-96, 37.8, 4, zoom = 4) %>%
addTiles()
dmap <- leaflet(week.allo.state) %>%
setView(-96, 37.8, 4, zoom = 4) %>%
addPolygons()
install.packages("sp")
install.packages("sf")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sf")
install.packages("leaflet")
install.packages("geojsonio")
install.packages("sf")
